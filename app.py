# ==============================================
# üí¨ Chatbot Regulatorio Interno
# Versi√≥n completa (Excel + OpenAI + Streamlit)
# ==============================================

import os
from openai import OpenAI
import pandas as pd
import numpy as np
import nltk
from sklearn.metrics.pairwise import cosine_similarity
from nltk.corpus import stopwords
import streamlit as st
import unicodedata
import markdown
import re

def render_html_markdown(texto):
    """Convierte markdown a HTML dentro del contenedor estilizado."""
    html = markdown.markdown(texto, extensions=["extra", "sane_lists"])
    return f"<div class='chat-response'>{html}</div>"

def quitar_acentos(texto):
    """Elimina acentos y caracteres diacr√≠ticos de un texto."""
    return ''.join(
        c for c in unicodedata.normalize('NFD', texto)
        if unicodedata.category(c) != 'Mn'
    )

def detectar_redireccion(fragmentos):
    """Detecta si alguna respuesta del contexto indica redirecci√≥n a otro departamento."""
    palabras_clave = [
        "contacte con", "dir√≠jase a", "debe consultarlo con", "responsabilidad de",
        "departamento de", "servicio de", "autoridad competente", "rem√≠tase a",
        "redirigirse a", "consultar con", "trasladar la consulta a"
    ]
    texto_unido = " ".join(fragmentos).lower()
    return any(p in texto_unido for p in palabras_clave)

def extraer_redireccion(fragmentos):
    """Extrae el fragmento que contiene una instrucci√≥n de redirecci√≥n e identifica el departamento o responsable."""
    palabras_clave = [
        "contacte con", "dir√≠jase a", "debe consultarlo con", "responsabilidad de",
        "departamento de", "servicio de", "autoridad competente", "rem√≠tase a",
        "redirigirse a", "consultar con", "trasladar la consulta a", "deber√°s escribir un correo",
        "deber√°s enviar un correo", "correo a la direcci√≥n", "puedes contactar con",
        "escriba a", "escribir a", "env√≠e un correo", "mandar un correo"
    ]

    departamentos = [
        "internacional", "reglamentaci√≥n", "toxicolog√≠a", "formulaci√≥n",
        "medio ambiente", "jur√≠dico", "seguridad del producto",
        "autoridad competente", "asuntos cient√≠ficos", "asuntos regulatorios"
    ]

    for frag in fragmentos:
        texto = frag.lower()
        if any(p in texto for p in palabras_clave):
            # Buscar si se menciona un departamento espec√≠fico
            for palabra in departamentos:
                if palabra in texto:
                    return f"{frag.strip()} (Corresponde al departamento de {palabra.capitalize()})."

            # Buscar si hay direcci√≥n de correo
            if "@" in frag:
                return f"{frag.strip()} (Se indica una direcci√≥n de correo para contacto directo)."

            return frag.strip()

    return None

# ==============================================
# 1Ô∏è‚É£ CONFIGURACI√ìN INICIAL
# ==============================================

client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))
nltk.download("stopwords", quiet=True)
stop_words = stopwords.words("spanish")

ruta_excel = "conversaciones_revisando.xlsx"
df = pd.read_excel(ruta_excel)
df.columns = df.columns.str.strip().str.lower()

# --- Crear listas de consultas y respuestas ---
consultas = df[df["role"].str.lower() == "user"]["content"].tolist()
respuestas = df[df["role"].str.lower() == "assistant"]["content"].tolist()

# --- Normalizar acentos y espacios (para comparaciones coherentes) ---
consultas = [quitar_acentos(str(c).strip().lower()) for c in consultas]
pares = list(zip(consultas, respuestas))

# ==============================================
# 2Ô∏è‚É£ CARGAR EMBEDDINGS PRECALCULADOS
# ==============================================
try:
    emb_consultas = np.load("emb_consultas_comprimido.npz")["emb"]
    print("‚úÖ Embeddings cargados correctamente.")
except FileNotFoundError:
    st.error("‚ùå No se encontr√≥ el archivo 'emb_consultas_comprimido.npz'.")
    st.stop()

# ==============================================
# 4Ô∏è‚É£ Buscar contexto relevante con embeddings
# ==============================================
def buscar_contexto(pregunta, top_k=5, umbral_similitud=0.78):
    pregunta_normalizada = quitar_acentos(pregunta.strip().lower())

    # ‚úÖ Coincidencia literal exacta (antes de usar embeddings)
    for i, (preg, resp) in enumerate(pares):
        if quitar_acentos(str(preg).strip().lower()) == pregunta_normalizada:
            print("‚úÖ Coincidencia exacta encontrada ‚Äî usando respuesta literal del Excel.")
            return [resp]

    # üîπ Si no hay coincidencia exacta, usar embeddings
    emb_pregunta = client.embeddings.create(
        model="text-embedding-3-small",
        input=pregunta_normalizada
    ).data[0].embedding

    similitudes = cosine_similarity([emb_pregunta], emb_consultas)[0]
    indices_ordenados = similitudes.argsort()[-top_k:][::-1]

    if similitudes[indices_ordenados[0]] >= umbral_similitud:
        print(f"‚úÖ Coincidencia fuerte ({similitudes[indices_ordenados[0]]:.2f}) ‚Äî usando respuesta del Excel.")
        return [pares[indices_ordenados[0]][1]]

    print("‚ö†Ô∏è No se encontr√≥ coincidencia fuerte ‚Äî se generar√° respuesta nueva.")
    return [pares[i][1] for i in indices_ordenados]

# ==============================================
# FRASES POR TEMA
# ==============================================
FRASES_POR_TEMA = {
    "cosmetico": [
        "‚ÄúUn producto cosm√©tico, seg√∫n el Reglamento (CE) n¬∫ 1223/2009, es toda sustancia o mezcla destinada a ser puesta en contacto con las partes superficiales del cuerpo humano (epidermis, sistema piloso y capilar, u√±as, labios, √≥rganos genitales externos) o con los dientes y mucosas bucales, con el fin exclusivo o principal de limpiarlos, perfumarlos, modificar su aspecto, protegerlos, mantenerlos en buen estado o corregir los olores corporales.‚Äù"
    ],
    "cosmetica para animales" : [
        """Los productos destinados a la higiene o cuidado de animales no se consideran cosm√©ticos y quedan fuera del √°mbito de aplicaci√≥n del Reglamento 1223/2009.
            
En el contexto espa√±ol, estos productos fueron considerados inicialmente como productos zoosanitarios. Tras la publicaci√≥n del Real Decreto 867/2020 dejaron de estar incluidos en dicho marco, aunque una sentencia del Tribunal Supremo en 2023 anul√≥ parcialmente ese Real Decreto, devolviendo temporalmente a los productos cosm√©ticos para animales la consideraci√≥n de zoosanitarios.

Finalmente, con la Ley 1/2025, de 1 de abril, que modifica la Ley 8/2003 de sanidad animal, se elimina la obligatoriedad de registro de los productos de higiene, cuidado y manejo de animales (HCM) y del material y utillaje zoosanitario (MUZ). En consecuencia, estos productos quedan fuera del √°mbito competencial del Ministerio de Agricultura y Pesca.

Ante esta situaci√≥n, el pasado mes de junio nos pusimos en contacto con ASEMAZ, quienes nos informaron de lo siguiente:Con la publicaci√≥n de la Ley 1/2025, determinados productos zoosanitarios destinados a higiene, cuidado y manejo de los animales ya no tienen que ser notificados por el titular de los mismos para su comercializaci√≥n.

Ahora bien, decimos ‚Äúdeterminados‚Äù dado que dependiendo del ‚Äúclaim‚Äù reivindicado por el producto (biocidas), tendr√°n las siguientes obligaciones:

**Registro nacional:**\n
- Si se trata de un zoosanitario para uso en entorno ganadero (insecticida, larvicida, desinfectante, etc.), deber√° solicitarse su registro ante el **MAPA** como plaguicida, con los correspondientes ensayos seg√∫n la eficacia que se quiera defender.  
  M√°s informaci√≥n: [Registro de productos zoosanitarios - MAPA](https://www.mapa.gob.es/es/ganaderia/temas/sanidad-animal-higiene-ganadera/Higiene-de-la-produccion-primaria-ganadera/registro-de-productos-zoosanitarios/)\n
- Si se trata de un plaguicida no agr√≠cola (desinfectante de uso en la industria alimentaria o uso ambiental, rodenticida, etc.), deber√° solicitarse su registro ante **Sanidad** como plaguicida no agr√≠cola.  
  M√°s informaci√≥n: [Registro nacional de plaguicidas no agr√≠colas - Ministerio de Sanidad](https://www.sanidad.gob.es/areas/sanidadAmbiental/biocidas/registro/regNacional/requisitos_nacional.htm)\n
- Si se trata de un **biocida tipo 3** (higiene veterinaria con funci√≥n biocida), es obligatoria la notificaci√≥n a Sanidad de conformidad con la **Disposici√≥n Transitoria Segunda del RD 1054/2002** (no requiere ensayos de eficacia).  
  M√°s informaci√≥n: [Notificaci√≥n DT2 - Ministerio de Sanidad](https://www.sanidad.gob.es/areas/sanidadAmbiental/biocidas/registro/regPlaguicidas/dt2notificanuevo.htm)\n

En todo caso, para los casos anteriores, una vez que las sustancias activas que formen parte del producto (sustancias biocidas) cuenten con Reglamento de Ejecuci√≥n para los tipos de productos biocidas que se quieren defender, esos productos deber√°n solicitar su registro por procedimiento europeo, de conformidad con las exigencias del Reglamento (UE) 528/2012.

En todo caso, si los productos que se deseen comercializar est√©n afectados o no por lo indicado anteriormente, son productos qu√≠micos peligrosos (mezclas o sustancias) quedar√°n afectados por la normativa de clasificaci√≥n y etiquetado de mezclas y sustancias qu√≠micas, debiendo estar debidamente etiquetados, contar con ficha de datos de seguridad (FDS) y ser notificados a toxicolog√≠a a trav√©s de un expediente PCN.

Por tanto, tal y como recomiendan desde ASEMAZ, lo m√°s conveniente es poneros en contacto con la autoridad competente correspondiente para que os puedan dar informaci√≥n detallada."""
    ],
    "vitamina a": [
        """De acuerdo con el Reglamento 1223/2009, para cualquier producto cosm√©tico que contenga las sustancias 'Retinol', 'Retinyl Acetate' o 'Retinyl Palmitate', la menci√≥n **‚ÄúEste producto contiene vitamina A. Tenga en cuenta su ingesta diaria antes de utilizarlo‚Äù** es obligatoria. 
Por tanto, la advertencia debe figurar literalmente en el etiquetado del producto.""",
        
        """Entendemos que esta advertencia pueda generar cierta confusi√≥n en el consumidor, pero modificar la redacci√≥n obligatoria no es una opci√≥n, ya que debe figurar exactamente con la redacci√≥n establecida en el Reglamento. 
No obstante, y siempre bajo criterio del evaluador de seguridad del producto, puede a√±adirse una advertencia complementaria que aclare que el producto es de uso cosm√©tico y no debe ingerirse."""
    ],
    "e metrologica": [
        """Seg√∫n el Real Decreto 1801/2008, la inclusi√≥n del s√≠mbolo "‚ÑÆ" en el etiquetado de los envases **no es obligatoria**.  
El art√≠culo 9.c) establece que los envases que cumplen con las modalidades de control estad√≠stico de lotes especificadas en el decreto pueden llevar el s√≠mbolo "‚ÑÆ", lo que certifica que el envase cumple con las disposiciones del mismo.

Si el s√≠mbolo "‚ÑÆ" ya est√° presente en el envase secundario, **no es necesario incluirlo tambi√©n en el envase primario**, siempre y cuando se garantice que el envase primario cumple con los requisitos de control establecidos.  
Sin embargo, es recomendable que la informaci√≥n sea clara y accesible para el consumidor, por lo que se sugiere mantener la coherencia en el etiquetado de ambos envases."""
    ]
}

# ==============================================
# RESPUESTAS DE REDIRECCI√ìN PREDEFINIDAS
# ==============================================
REDIRECCIONES_PREDEFINIDAS = {
    "internacional": {
        "palabras": [
            "exportar", "exportaci√≥n", "terceros pa√≠ses", "fuera de la ue",
            "australia", "nueva zelanda", "ee.uu", "eeuu", "china", "reino unido"
        ],
        "respuesta": """\
Buenos d√≠as,

Para consultas relacionadas con terceros pa√≠ses pueden ayudaros mis compa√±eras del √°rea internacional.  
Lamentablemente, ellas a√∫n no tienen acceso a la plataforma de Consultas T√©cnicas,  
pero puedes escribirles a la siguiente direcci√≥n de correo electr√≥nico:

[stanpainternacional@stanpa.com](mailto:stanpainternacional@stanpa.com)

Espero haber sido de utilidad y si necesita alguna cosa m√°s, estamos a su disposici√≥n.

Reciba un cordial saludo,  
Departamento T√©cnico.
"""
    },
    "sostenibilidad": {
        "palabras": [
            "sostenibilidad", "medio ambiente", "huella", "ecodise√±o",
            "envase sostenible", "packaging sostenible"
        ],
        "respuesta": """\
Buenos d√≠as,

En relaci√≥n con tu consulta, lamentamos informarte que la responsable de Sostenibilidad,  
quien podr√≠a ayudarte, no tiene acceso a la nueva plataforma de consultas t√©cnicas.  
No obstante, puedes dirigirte a ella a trav√©s del siguiente correo electr√≥nico:

[lucia.jimenez@stanpa.com](mailto:lucia.jimenez@stanpa.com)

Espero haber sido de utilidad y si necesita alguna cosa m√°s, estamos a su disposici√≥n.

Reciba un cordial saludo,  
Departamento T√©cnico.
"""
    }
}

# ==============================================
# 5Ô∏è‚É£ FUNCI√ìN PRINCIPAL
# ==============================================
def responder_chatbot(pregunta, mostrar_contexto=False):
    from datetime import datetime
    hora = datetime.now().hour
    saludo = "Buenos d√≠as," if hora < 12 else "Buenas tardes,"
    despedida = (
        "<br><br>Espero haber sido de utilidad y si necesita alguna cosa m√°s, estamos a su disposici√≥n.<br><br>"
        "Reciba un cordial saludo,<br>"
        "Departamento T√©cnico."
    )

    pregunta_sin_acentos = quitar_acentos(pregunta.lower())

    # üîπ 1Ô∏è‚É£ Redirecciones predefinidas (internacional, sostenibilidad, etc.)
    for area, datos in REDIRECCIONES_PREDEFINIDAS.items():
        for palabra in datos["palabras"]:
            # Coincidencia robusta (palabra exacta, aunque est√© seguida de coma o punto)
            if re.search(rf"\b{re.escape(palabra)}\b", pregunta_sin_acentos):
                return datos["respuesta"]

    # üîπ 2Ô∏è‚É£ Temas fijos (vitamina A, cosm√©tica animal, etc.)
    if any(p in pregunta_sin_acentos for p in ["vitamina a", "retinol", "retinil"]):
        texto = "\n\n".join(FRASES_POR_TEMA["vitamina a"])
        return f"{saludo}\n\n{texto}\n\n{despedida}"

    if any(p in pregunta_sin_acentos for p in [
        "cosmetica animal", "cosmetica para animales", "higiene animal",
        "cuidado animal", "cosmetica veterinaria", "productos para mascotas"
    ]):
        texto = FRASES_POR_TEMA["cosmetica para animales"][0]
        return f"{saludo}\n\n{texto}\n\n{despedida}"
    
    if any(p in pregunta_sin_acentos for p in [
        "e metrologica", "simbolo e", "s√≠mbolo e", "e metrol√≥gica"
    ]):
        texto = "\n\n".join(FRASES_POR_TEMA["e metrologica"])
        return f"{saludo}\n\n{texto}\n\n{despedida}"
        
    # üîπ 3Ô∏è‚É£ Caso general: embeddings + GPT
    fragmentos = buscar_contexto(pregunta)
    contexto = "\n\n".join(fragmentos) if fragmentos else ""
    prompt = f"""
Eres un asistente t√©cnico experto en legislaci√≥n cosm√©tica, biocidas y productos regulados.
Redacta una respuesta formal, precisa y t√©cnica, pero **no incluyas f√≥rmulas de cortes√≠a como 'Estimado/a' ni nombres del remitente.**
Tampoco incluyas una firma con nombres personales; la respuesta debe cerrarse con 'Departamento T√©cnico.'
Empieza la respuesta directamente tras el saludo y no incluyas saludos ni cierres redundantes.

Contexto normativo: {contexto}
Pregunta: {pregunta}
"""

    respuesta = client.chat.completions.create(
        model="gpt-4o-mini",
        messages=[{"role": "user", "content": prompt}],
        temperature=0.1
    ).choices[0].message.content.strip()

    # --- Ajuste final ---
    if not respuesta.lower().startswith(("buenos d√≠as", "buenas tardes")):
        respuesta = f"{saludo}\n\n{respuesta}"

    # üßπ Eliminar cualquier cierre redundante del modelo
    for texto_final in ["departamento t√©cnico", "reciba un cordial saludo"]:
        if texto_final in respuesta.lower():
            respuesta = respuesta[:respuesta.lower().rfind(texto_final)].strip()
            break  # detiene la limpieza en la primera coincidencia

    # üí¨ A√±adir siempre la despedida fija
    respuesta = f"{respuesta}\n\n{despedida}"

    return respuesta


# ==============================================
# üñ•Ô∏è INTERFAZ STREAMLIT
# ==============================================
st.set_page_config(page_title="Chatbot Regulatorio Interno", page_icon="üí¨", layout="centered")

st.markdown("""
    <style>
    .chat-response {
        background-color: #ffffff;
        border: 1px solid #e0e4e8;
        border-radius: 0.8rem;
        padding: 1.5rem;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        margin-top: 1rem;
        line-height: 1.7;
        font-size: 16px;
        color: #1a1a1a;
    }
    </style>
""", unsafe_allow_html=True)

st.markdown("<h1 style='text-align:center;'>üí¨ Chatbot Regulatorio Interno</h1>", unsafe_allow_html=True)
st.markdown("<p style='text-align:center;color:gray;'>Consultas sobre normativa cosm√©tica y regulaci√≥n</p>", unsafe_allow_html=True)
st.markdown("<hr>", unsafe_allow_html=True)

if "historial" not in st.session_state:
    st.session_state.historial = []

for entrada in st.session_state.historial:
    if entrada["role"] == "user":
        st.markdown(f"<div class='chat-question'>üß¥ <strong>T√∫:</strong> {entrada['content']}</div>", unsafe_allow_html=True)
    else:
        st.markdown(render_html_markdown(entrada["content"]), unsafe_allow_html=True)

pregunta = st.chat_input("Escribe tu consulta y pulsa Enter para enviar...")

if pregunta:
    st.session_state.historial.append({"role": "user", "content": pregunta})
    with st.spinner("Analizando consulta..."):
        respuesta = responder_chatbot(pregunta)
    st.session_state.historial.append({"role": "assistant", "content": respuesta})
    st.rerun()

st.markdown("<hr>", unsafe_allow_html=True)
st.caption("üß† Basado en el hist√≥rico de consultas internas y el modelo GPT-4o de OpenAI.")