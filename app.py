# ==============================================
# üí¨ Chatbot Regulatorio Interno
# Versi√≥n completa (Excel + OpenAI + Streamlit)
# ==============================================

import os
from openai import OpenAI
import pandas as pd
import numpy as np
import nltk
from sklearn.metrics.pairwise import cosine_similarity
from nltk.corpus import stopwords
import streamlit as st

# ==============================================
# 1Ô∏è‚É£ CONFIGURACI√ìN INICIAL
# ==============================================

# Usa tu clave de OpenAI (debe estar guardada en una variable de entorno)
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

# Descargar stopwords si no est√°n instaladas
nltk.download("stopwords", quiet=True)
stop_words = stopwords.words("spanish")

# --- 1Ô∏è‚É£ Cargar el dataset ---
ruta_excel = "conversaciones_revisando.xlsx"
df = pd.read_excel(ruta_excel)

# Normalizar nombres
df.columns = df.columns.str.strip().str.lower()

# Tomar solo las consultas y respuestas
consultas = df[df["role"].str.lower() == "user"]["content"].tolist()
respuestas = df[df["role"].str.lower() == "assistant"]["content"].tolist()

# Asegurar que haya pares del mismo tama√±o
pares = list(zip(consultas, respuestas))

# ==============================================
# 2Ô∏è‚É£ CARGAR EMBEDDINGS PRECALCULADOS
# ==============================================
try:
    emb_consultas = np.load("emb_consultas_comprimido.npz")["emb"]
    print("‚úÖ Embeddings cargados correctamente.")
except FileNotFoundError:
    st.error("‚ùå No se encontr√≥ el archivo 'emb_consultas.npy'. Genera primero los embeddings con 'generar_embeddings_excel.py'.")
    st.stop()

# ==============================================
# 4Ô∏è‚É£ Buscar contexto relevante con embeddings
# ==============================================
def buscar_contexto(pregunta, top_k=5):
    """Busca las respuestas m√°s similares sem√°nticamente."""
    emb_pregunta = client.embeddings.create(
        model="text-embedding-3-small", input=pregunta
    ).data[0].embedding
    similitudes = cosine_similarity([emb_pregunta], emb_consultas)[0]
    indices = similitudes.argsort()[-top_k:][::-1]
    fragmentos = [pares[i][1] for i in indices]
    return fragmentos

FRASES_POR_TEMA = {
    "cosm√©tico": [
        "‚ÄúUn producto cosm√©tico, seg√∫n el Reglamento (CE) n¬∫ 1223/2009, es toda sustancia o mezcla destinada a ser puesta en contacto con las partes superficiales del cuerpo humano (epidermis, sistema piloso y capilar, u√±as, labios, √≥rganos genitales externos) o con los dientes y mucosas bucales, con el fin exclusivo o principal de limpiarlos, perfumarlos, modificar su aspecto, protegerlos, mantenerlos en buen estado o corregir los olores corporales.‚Äù"
    ],
    "cosm√©tica para animales" : [
        """Los productos destinados a la higiene o cuidado de animales no se consideran cosm√©ticos y quedan fuera del √°mbito de aplicaci√≥n del Reglamento 1223/2009."""
            
        """En el contexto espa√±ol, estos productos fueron considerados inicialmente como productos zoosanitarios. Tras la publicaci√≥n del Real Decreto 867/2020 dejaron de estar incluidos en dicho marco, aunque una sentencia del Tribunal Supremo en 2023 anul√≥ parcialmente ese Real Decreto, devolviendo temporalmente a los productos cosm√©ticos para animales la consideraci√≥n de zoosanitarios.
 
        Finalmente, con la Ley 1/2025, de 1 de abril, que modifica la Ley 8/2003 de sanidad animal, se elimina la obligatoriedad de registro de los productos de higiene, cuidado y manejo de animales (HCM) y del material y utillaje zoosanitario (MUZ). En consecuencia, estos productos quedan fuera del √°mbito competencial del Ministerio de Agricultura y Pesca.

        Ante esta situaci√≥n, el pasado mes de junio nos pusimos en contacto con ASEMAZ, quienes nos informaron de lo siguiente:Con la publicaci√≥n de la Ley 1/2025, determinados productos zoosanitarios destinados a higiene, cuidado y manejo de los animales ya no tienen que ser notificados por el titular de los mismos para su comercializaci√≥n.

        Ahora bien, decimos ‚Äúdeterminados‚Äù dado que dependiendo del ‚Äúclaim‚Äù reivindicado por el producto (biocidas), tendr√°n las siguientes obligaciones:

        **Registro nacional:**
        - Si se trata de un zoosanitario para uso en entorno ganadero (insecticida, larvicida, desinfectante, etc.), deber√° solicitarse su registro ante el MAPA como plaguicida, con los correspondientes ensayos seg√∫n la eficacia que se quiera defender. M√°s informaci√≥n: https://www.mapa.gob.es/es/ganaderia/temas/sanidad-animal-higiene-ganadera/Higiene-de-la-produccion-primaria-ganadera/registro-de-productos-zoosanitarios/
        - Si se trata de un plaguicida no agr√≠cola (desinfectante de uso en la industria alimentaria o uso ambiental, rodenticida, etc.), deber√° solicitarse su registro ante Sanidad como plaguicida no agr√≠cola. M√°s informaci√≥n: https://www.sanidad.gob.es/areas/sanidadAmbiental/biocidas/registro/regNacional/requisitos_nacional.htm
        - Si se trata de un biocida tipo 3 (higiene veterinaria con funci√≥n biocida), es obligatoria la notificaci√≥n a Sanidad de conformidad con la Disposici√≥n Transitoria Segunda del RD 1054/2002 (no requiere ensayos de eficacia). M√°s informaci√≥n: https://www.sanidad.gob.es/areas/sanidadAmbiental/biocidas/registro/regPlaguicidas/dt2notificanuevo.htm

        En todo caso, para los casos anteriores, una vez que las sustancias activas que formen parte del producto (sustancias biocidas) cuenten con Reglamento de Ejecuci√≥n para los tipos de productos biocidas que se quieren defender, esos productos deber√°n solicitar su registro por procedimiento europeo, de conformidad con las exigencias del Reglamento (UE) 528/2012.

        En todo caso, si los productos que se deseen comercializar est√©n afectados o no por lo indicado anteriormente, son productos qu√≠micos peligrosos (mezclas o sustancias) quedar√°n afectados por la normativa de clasificaci√≥n y etiquetado de mezclas y sustancias qu√≠micas, debiendo estar debidamente etiquetados, contar con ficha de datos de seguridad (FDS) y ser notificados a toxicolog√≠a a trav√©s de un expediente PCN.

        Por tanto, tal y como recomiendan desde ASEMAZ, lo m√°s conveniente es poneros en contacto con la autoridad competente correspondiente para que os puedan dar informaci√≥n detallada.
        """
    ]
}

# --- 5Ô∏è‚É£ Generar respuesta con GPT ---
def responder_chatbot(pregunta, mostrar_contexto=False):
    from datetime import datetime

    # --- üïí Determinar saludo seg√∫n hora ---
    hora = datetime.now().hour
    if hora < 12:
        saludo = "Buenos d√≠as,"
    else:
        saludo = "Buenas tardes,"

    # --- üßæ Despedida fija ---
    despedida = (
        "Espero haber sido de utilidad y si necesita alguna cosa m√°s, estamos a su disposici√≥n.\n"
        "Reciba un cordial saludo,\n"
        "Departamento T√©cnico."
    )

    pregunta_lower = pregunta.lower()
    fragmentos = buscar_contexto(pregunta)
    if not fragmentos:
        return "No encontr√© informaci√≥n relevante en la base de datos. ¬øPodr√≠as reformular la pregunta?"

    contexto = "\n\n".join(fragmentos)

    # --- Detectar tema ---
    frases_relevantes = []
    for tema, frases in FRASES_POR_TEMA.items():
        if tema in pregunta_lower:
            frases_relevantes.extend(frases)
    
        # --- üß© Filtrar la definici√≥n general cuando no aporta valor ---
    ingredientes = [
        "formaldehido", "formaldeh√≠do", "fenoxietanol", "metanol", "retinol",
        "plomo", "parabenos", "filtros uv", "filtro uv", "perfume",
        "fragancia", "conservante", "colorante", "nanomaterial", "biocida"
    ]

    # Si la pregunta se refiere a un ingrediente, eliminar la definici√≥n general de cosm√©tico
    if any(i in pregunta_lower for i in ingredientes):
        if "cosm√©tico" in FRASES_POR_TEMA:
            frases_relevantes = [
                f for f in frases_relevantes
                if f not in FRASES_POR_TEMA["cosm√©tico"]
            ]

    # --- üí¨ Construir el prompt t√©cnico con afirmaci√≥n inicial ---
    frases_texto = "\n".join([f"- {f}" for f in frases_relevantes]) if frases_relevantes else ""

    prompt = f"""
Eres un asistente experto en legislaci√≥n cosm√©tica, biocidas y productos regulados.

Debes redactar una respuesta **formal, precisa y actualizada**, en tono t√©cnico.
Estructura la respuesta de la siguiente forma:

1Ô∏è‚É£ Comienza con una **afirmaci√≥n clara y objetiva** sobre la situaci√≥n normativa del tema preguntado.
   (Ejemplo: ‚ÄúEl uso de formaldeh√≠do en productos cosm√©ticos comercializados en la Uni√≥n Europea est√° regulado por el Reglamento (CE) n¬∫ 1223/2009.‚Äù)
2Ô∏è‚É£ Desarrolla a continuaci√≥n una explicaci√≥n completa con el contexto legal y t√©cnico.
3Ô∏è‚É£ Finaliza con la despedida establecida.

La respuesta debe empezar con un saludo (‚ÄúBuenos d√≠as,‚Äù / ‚ÄúBuenas tardes,‚Äù) y finalizar con:

"Espero haber sido de utilidad y si necesita alguna cosa m√°s, estamos a su disposici√≥n.
Reciba un cordial saludo,
Departamento T√©cnico."

‚öñÔ∏è Instrucciones:
- No inventes ni reformules informaci√≥n.
- No incluyas recomendaciones ni valoraciones personales.
- **Debes incluir literalmente las siguientes frases normativas**, sin modificarlas ni traducirlas:
{frases_texto}
- Inserta las frases donde encajen naturalmente en el desarrollo.
- El resto del texto debe complementar las frases con explicaciones objetivas y actuales.

---
Contexto normativo (solo para ampliar datos coherentes con las frases anteriores):
{contexto}

---
Pregunta:
{pregunta}

---
Pregunta:
{pregunta}
"""

    # --- üîó Llamada al modelo ---
    respuesta = client.chat.completions.create(
        model="gpt-4o-mini",
        messages=[{"role": "user", "content": prompt}],
        temperature=0.1
    ).choices[0].message.content.strip()

    # --- üß© Evitar duplicados ---
    respuesta_limpia = respuesta.strip()

    if not respuesta_limpia.lower().startswith(("buenos d√≠as", "buenas tardes", "buenas noches")):
        respuesta_limpia = f"{saludo}\n\n{respuesta_limpia}"

    despedida_normalizada = despedida.lower().replace("\n", " ").replace("  ", " ").strip()
    respuesta_normalizada = respuesta_limpia.lower().replace("\n", " ").replace("  ", " ").strip()
    if "departamento t√©cnico" not in respuesta_normalizada:
        respuesta_limpia = f"{respuesta_limpia}\n\n{despedida}"

    # --- ‚ú® Poner en cursiva las frases normativas incluidas ---
    for tema, frases in FRASES_POR_TEMA.items():
        for frase in frases:
            frase_limpia = frase.strip("‚Äú‚Äù\"'")
            if frase_limpia in respuesta_limpia:
                respuesta_limpia = respuesta_limpia.replace(frase_limpia, f"*{frase_limpia}*")

    return respuesta_limpia

# ==============================================
# 5Ô∏è‚É£ INTERFAZ STREAMLIT
# ==============================================
st.title("üí¨ Chatbot Regulatorio Interno")
st.write("Escribe tu consulta relacionada con normativa cosm√©tica o procedimientos t√©cnicos.")

pregunta = st.text_area("üß¥ Tu consulta:")
if st.button("Enviar"):
    if pregunta.strip():
        with st.spinner("Analizando consulta..."):
            respuesta = responder_chatbot(pregunta)
        st.markdown(f"### üí¨ Respuesta:\n{respuesta}")
    else:
        st.warning("Por favor, escribe una consulta antes de enviar.")

st.markdown("---")
st.caption("üß† Basado en el hist√≥rico de consultas internas y el modelo GPT-4o de OpenAI.")
